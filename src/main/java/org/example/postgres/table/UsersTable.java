package org.example.postgres.table;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.example.entity.User;
import org.example.postgres.Config;

public class UsersTable {
  private static final String jdbcUrl = Config.jdbcUrl;
  private static final String username = Config.username;
  private static final String password = Config.password;

  public static void initialize() throws SQLException {
    Connection connection = DriverManager.getConnection(jdbcUrl, username, password);

    String sqlRequest =
        "DROP TABLE IF EXISTS users; "
            + "CREATE TABLE users (user_ID INT GENERATED BY DEFAULT AS IDENTITY, email VARCHAR(30), passwd VARCHAR(20), username VARCHAR(30), PRIMARY KEY(user_ID)); ";
    PreparedStatement preparedStatement = connection.prepareStatement(sqlRequest);
    preparedStatement.execute();

    preparedStatement.close();
    connection.close();
  }

  public static void insert(User user) throws SQLException {
    Connection connection = DriverManager.getConnection(jdbcUrl, username, password);

    String sqlRequest = "INSERT INTO users(email, passwd, username) " + "VALUES (?, ?, ?)";
    PreparedStatement preparedStatement = connection.prepareStatement(sqlRequest);
    preparedStatement.setString(1, user.email());
    preparedStatement.setString(2, user.password());
    preparedStatement.setString(3, user.username());

    preparedStatement.executeUpdate();

    preparedStatement.close();
    connection.close();
  }

  public static boolean exists(String email) throws SQLException {
    Connection connection = DriverManager.getConnection(jdbcUrl, username, password);

    String sqlRequest =
        String.format("SELECT COUNT(email) AS total FROM users WHERE email = '%s'", email);
    PreparedStatement preparedStatement = connection.prepareStatement(sqlRequest);
    ResultSet rs = preparedStatement.executeQuery();

    rs.next();
    int result = rs.getInt("total");

    preparedStatement.close();
    connection.close();

    return !(result == 0);
  }

  public static String getUserPassword(String email) throws SQLException {
    Connection connection = DriverManager.getConnection(jdbcUrl, username, password);

    String sqlRequest = String.format("SELECT passwd FROM users WHERE email = '%s'", email);
    PreparedStatement preparedStatement = connection.prepareStatement(sqlRequest);
    ResultSet rs = preparedStatement.executeQuery();

    String result = "";
    while (rs.next()) {
      result = rs.getString(1);
    }

    preparedStatement.close();
    connection.close();

    return result;
  }
}
